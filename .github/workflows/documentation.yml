name: Publish Documentation

on:
  push:
    branches:
    - 'master'
    tags:
    - '**'

# SECRETS
# - GH_DOCS_WRITE_KEY: generated locally, added to github repo (public key)
#                    `ssh-keygen -t rsa -b 4096 -C "Github CI Docs Key" -N "" -f key`
# - GITHUB_TOKEN: (default, from github actions)

env:
  DOCS_FOLDER: docs
  DOCS_BRANCH: documentation

jobs:
  docs:
    name: Build Docs
    runs-on: ubuntu-latest
    if: github.repository == 'RasaHQ/rasa'  # don't run this for master branches of forks, would fail anyways

    steps:
    - name: Checkout git repository 🕝
      uses: actions/checkout@v2

    - name: Set up Python 3.6 🐍
      uses: actions/setup-python@v1
      with:
        python-version: 3.6

    - name: Set up Node 12.x 🦙
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'

    - name: Read Poetry Version 🔢
      run: |
        echo "::set-env name=POETRY_VERSION::$(scripts/poetry-version.sh)"
      shell: bash

    - name: Install poetry 🦄
      uses: Gr1N/setup-poetry@v1
      with:
        poetry-version: ${{ env.POETRY_VERSION }}

    - name: Load Poetry Cached Libraries ⬇
      uses: actions/cache@v1
      with:
        path: ~/.cache/pypoetry/virtualenvs
        key: ${{ runner.os }}-poetry-3.6-non-full-${{ hashFiles('**/poetry.lock') }}
        restore-keys: ${{ runner.os }}-poetry-3.6-non-full

    - name: Load Yarn Cached Packages ⬇
      uses: actions/cache@v1
      with:
        path: docs/node_modules
        key: ${{ runner.os }}-yarn-12.x-${{ hashFiles('docs/yarn.lock') }}
        restore-keys: ${{ runner.os }}-yarn-12.x

    - name: Install Dependencies 📦
      run: make install install-docs

    - name: Pre-build Docs 🧶
      run: cd $DOCS_FOLDER && poetry run yarn pre-build

    - name: Build & Publish Docs 🏃‍♀️
      env:
        GH_DOCS_WRITE_KEY: ${{ secrets.GH_DOCS_WRITE_KEY }}
        TMP_DOCS_FOLDER: /tmp/documentation-${{ github.run_id }}
        TMP_SSH_KEY_PATH: /tmp/docs_key
      run: |
        eval "$(ssh-agent -s)"; touch $TMP_SSH_KEY_PATH; chmod 0600 $TMP_SSH_KEY_PATH
        echo "$GH_DOCS_WRITE_KEY" > $TMP_SSH_KEY_PATH
        ssh-add $TMP_SSH_KEY_PATH

        git config --global user.email "builds@github-ci.com"
        git config --global user.name "GitHub CI"
        git remote set-url --push origin "git@github.com:${{github.repository}}"

        ./scripts/push_docs_to_branch.sh
